pipeline {
	agent any
	tools {
	  maven 'Maven 3.5'
	  git 'Default'
	  jdk 'Java 10'
	}
	stages {
	    stage("Initialization Email") {
	    	steps {
			emailext body: "build for ${env.JOB_NAME} has started. Console at URL: ${env.BUILD_URL}", subject: "Build ${env.BUILD_NUMBER} has Started for ${env.JOB_NAME}", to: 'cfb833@mocs.utc.edu'
	    	}
	    }
	    stage("Maven Build & JUnit Tests") {
	    	steps {
	    		sh 'mvn -f /home/ec2-user/workspace/DemoPipeline/javaApp/pom.xml clean package'
	    	}
	    }
	    stage("Delivery") {
	    	steps {
	    		echo 'Doing stuff on the server... probably'
			sshPublisher(publishers: [sshPublisherDesc(configName: 'Deployment Server', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: 'sudo cp javaApp/target/webapp.war apache-tomcat-8.5.34/webapps/webapp.war', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '', remoteDirectorySDF: false, removePrefix: '', sourceFiles: '**/*.war')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: true)])
	    	}
	    }
	    stage("Selenium Test") {
	    	steps {
			sh 'xvfb-run mvn -f /home/ec2-user/workspace/DemoPipeline/javaApp/pom.xml failsafe:integration-test'
	    	}
	    }
	}
	post {
		success {
		    mail bcc: '', body: "<b>Details</b><br><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL to build: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: '', mimeType: 'text/html', replyTo: '', subject: "SUCCESS: Project name -> ${env.JOB_NAME}", to: "cfb833@mocs.utc.edu";
		}
		failure {
		    mail bcc: '', body: "<b>Details</b><br><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL to build: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: '', mimeType: 'text/html', replyTo: '', subject: "FAILURE: Project name -> ${env.JOB_NAME}", to: "cfb833@mocs.utc.edu";
		}
	}
}
